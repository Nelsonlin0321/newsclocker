// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum DateRange {
  any_time
  past_hour
  past_24_hours
  past_week
  past_month
  past_year
}

enum Frequency {
  every_12_hour
  every_day
  every_week
}

enum SubStatus {
  RUNNING
  COMPLETED
  FAILED
}

model NewsSubscription {
  id          String    @id @default(cuid()) @map("_id")
  name        String
  userId      String
  keywords    String[]
  language    String
  country     String
  dateRange   DateRange
  active      Boolean   @default(true)
  frequency   Frequency
  timeToSend  String
  timezone    String
  nextRunTime DateTime
  newsSources String[]  @default([])
  newsPrompt  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      SubStatus @default(COMPLETED)
  Mail        Mail[]

  @@index([userId])
}

model Cache {
  id        String   @id @default(cuid()) @map("_id")
  key       String
  value     Json
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([key])
}

model Prompt {
  id             String           @id @default(cuid()) @map("_id")
  userId         String
  title          String
  description    String
  category       String
  icon           String
  share          Boolean          @default(false)
  FavoritePrompt FavoritePrompt[]

  @@index([userId])
  @@index([share])
  @@index([category])
}

model FavoritePrompt {
  id       String @id @default(cuid()) @map("_id")
  userId   String
  promptId String
  prompt   Prompt @relation(fields: [promptId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model PromptIcon {
  id   String @id @default(cuid()) @map("_id")
  icon String
}

model PromptCategory {
  id       String @id @default(cuid()) @map("_id")
  category String
}

model Mail {
  id                 String           @id @default(cuid()) @map("_id")
  createdAt          DateTime         @default(now())
  newsSubscriptionId String
  scrapeContent      String[]
  searchResult       Json
  content            String
  pdfUrl             String
  newsSubscription   NewsSubscription @relation(fields: [newsSubscriptionId], references: [id])

  @@index([newsSubscriptionId])
  @@index([newsSubscriptionId, createdAt])
}
